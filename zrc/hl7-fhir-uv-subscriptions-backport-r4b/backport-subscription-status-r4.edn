{ns hl7-fhir-uv-subscriptions-backport-r4b.backport-subscription-status-r4,
 import #{hl7-fhir-r4b-core.Subscription
          zen.fhir
          hl7-fhir-uv-subscriptions-backport-r4b.backport-subscription-status-r4
          hl7-fhir-r4b-core.value-set.subscription-status
          hl7-fhir-r4b-core.Parameters
          hl7-fhir-r4b-core.value-set.subscription-notification-type},
 parameter-schema {:zen/tags #{zen/schema zen.fhir/structure-schema},
                   :zen.fhir/version "0.6.30-13",
                   :zen/desc "Slices containing subscription status information"},
 schema {:zen.fhir/version "0.6.30-13",
         :confirms #{hl7-fhir-r4b-core.Parameters/schema
                     zen.fhir/Resource},
         :zen/tags #{zen.fhir/profile-schema zen/schema},
         :zen.fhir/profileUri "http://hl7.org/fhir/uv/subscriptions-backport/StructureDefinition/backport-subscription-status-r4",
         :require #{:parameter},
         :type zen/map,
         :zen/desc "Profile on Parameters for topic-based subscription notifications in R4.",
         :keys {:parameter {:type zen/vector,
                            :slicing {:slices {"subscription" {:schema {:type zen/vector,
                                                                        :minItems 1,
                                                                        :maxItems 1,
                                                                        :every {:type zen/map,
                                                                                :keys {:name {:const {:value "subscription"},
                                                                                              :zen/desc "Slice discriminator: the reference to a subscription"},
                                                                                       :value {:fhir/polymorphic true,
                                                                                               :type zen/map,
                                                                                               :keys {:Reference {:confirms #{zen.fhir/Reference},
                                                                                                                  :zen.fhir/reference {:refers #{hl7-fhir-r4b-core.Subscription/schema}}}},
                                                                                               :fhir/flags #{:MS},
                                                                                               :zen/desc "Reference to the Subscription responsible for this notification"}},
                                                                                :require #{:value}}},
                                                               :filter {:engine :match,
                                                                        :match {:name "subscription"}}},
                                               "topic" {:schema {:type zen/vector,
                                                                 :maxItems 1,
                                                                 :every {:type zen/map,
                                                                         :keys {:name {:const {:value "topic"},
                                                                                       :zen/desc "Slice discriminator: the canonical reference to a subscription topic"},
                                                                                :value {:fhir/polymorphic true,
                                                                                        :type zen/map,
                                                                                        :fhir/flags #{:MS},
                                                                                        :zen/desc "Canonical reference to the SubscriptionTopic this notification relates to"}}}},
                                                        :filter {:engine :match,
                                                                 :match {:name "topic"}}},
                                               "status" {:schema {:type zen/vector,
                                                                  :minItems 1,
                                                                  :maxItems 1,
                                                                  :every {:type zen/map,
                                                                          :keys {:name {:const {:value "status"},
                                                                                        :zen/desc "Slice discriminator: the subscription status"},
                                                                                 :value {:fhir/polymorphic true,
                                                                                         :type zen/map,
                                                                                         :fhir/flags #{:MS},
                                                                                         :zen.fhir/value-set {:symbol hl7-fhir-r4b-core.value-set.subscription-status/value-set,
                                                                                                              :strength :required},
                                                                                         :zen/desc "Status of the subscription when this notification was generated"}},
                                                                          :require #{:value}}},
                                                         :filter {:engine :match,
                                                                  :match {:name "status"}}},
                                               "type" {:schema {:type zen/vector,
                                                                :minItems 1,
                                                                :maxItems 1,
                                                                :every {:type zen/map,
                                                                        :keys {:name {:const {:value "type"},
                                                                                      :zen/desc "Slice discriminator: the type of event for this notification"},
                                                                               :value {:fhir/polymorphic true,
                                                                                       :type zen/map,
                                                                                       :fhir/flags #{:MS},
                                                                                       :zen.fhir/value-set {:symbol hl7-fhir-r4b-core.value-set.subscription-notification-type/value-set,
                                                                                                            :strength :required},
                                                                                       :zen/desc "The type of event being conveyed with this notificaiton."}},
                                                                        :require #{:value}}},
                                                       :filter {:engine :match,
                                                                :match {:name "type"}}},
                                               "eventsSinceSubscriptionStart" {:schema {:type zen/vector,
                                                                                        :maxItems 1,
                                                                                        :every {:type zen/map,
                                                                                                :keys {:name {:const {:value "events-since-subscription-start"},
                                                                                                              :zen/desc "Slice discriminator: the number of events since this subscription started"},
                                                                                                       :value {:fhir/polymorphic true,
                                                                                                               :type zen/map,
                                                                                                               :fhir/flags #{:MS},
                                                                                                               :zen/desc "Events since the Subscription was created"}}}},
                                                                               :filter {:engine :match,
                                                                                        :match {:name "events-since-subscription-start"}}},
                                               "notificationEvent" {:schema {:type zen/vector,
                                                                             :every {:type zen/map,
                                                                                     :keys {:name {:const {:value "notification-event"},
                                                                                                   :zen/desc "Parameter containing notification event details"},
                                                                                            :part {:type zen/vector,
                                                                                                   :slicing {:slices {"eventNumber" {:schema {:type zen/vector,
                                                                                                                                              :minItems 1,
                                                                                                                                              :maxItems 1,
                                                                                                                                              :every {:type zen/map,
                                                                                                                                                      :keys {:name {:const {:value "event-number"},
                                                                                                                                                                    :zen/desc "Slice discriminator: the event number"},
                                                                                                                                                             :value {:fhir/polymorphic true,
                                                                                                                                                                     :type zen/map,
                                                                                                                                                                     :fhir/flags #{:MS},
                                                                                                                                                                     :zen/desc "Event number"}},
                                                                                                                                                      :require #{:value}}},
                                                                                                                                     :filter {:engine :match,
                                                                                                                                              :match {:name "event-number"}}},
                                                                                                                      "eventTimestamp" {:schema {:type zen/vector,
                                                                                                                                                 :maxItems 1,
                                                                                                                                                 :every {:type zen/map,
                                                                                                                                                         :keys {:name {:const {:value "timestamp"},
                                                                                                                                                                       :zen/desc "Slice discriminator: the event timestamp"},
                                                                                                                                                                :value {:fhir/polymorphic true,
                                                                                                                                                                        :type zen/map,
                                                                                                                                                                        :fhir/flags #{:MS},
                                                                                                                                                                        :zen/desc "The instant this event occurred"}}}},
                                                                                                                                        :filter {:engine :match,
                                                                                                                                                 :match {:name "timestamp"}}},
                                                                                                                      "eventFocus" {:schema {:type zen/vector,
                                                                                                                                             :maxItems 1,
                                                                                                                                             :every {:type zen/map,
                                                                                                                                                     :keys {:name {:const {:value "focus"},
                                                                                                                                                                   :zen/desc "Slice discriminator: the event focus"},
                                                                                                                                                            :value {:fhir/polymorphic true,
                                                                                                                                                                    :type zen/map,
                                                                                                                                                                    :keys {:Reference {:confirms #{zen.fhir/Reference},
                                                                                                                                                                                       :zen.fhir/reference {:refers #{}}}},
                                                                                                                                                                    :fhir/flags #{:MS},
                                                                                                                                                                    :zen/desc "The focus of this event"}}}},
                                                                                                                                    :filter {:engine :match,
                                                                                                                                             :match {:name "focus"}}},
                                                                                                                      "eventAdditionalContext" {:schema {:type zen/vector,
                                                                                                                                                         :every {:type zen/map,
                                                                                                                                                                 :keys {:name {:const {:value "additional-context"},
                                                                                                                                                                               :zen/desc "Slice discriminator: additional context for this event"},
                                                                                                                                                                        :value {:fhir/polymorphic true,
                                                                                                                                                                                :type zen/map,
                                                                                                                                                                                :keys {:Reference {:confirms #{zen.fhir/Reference},
                                                                                                                                                                                                   :zen.fhir/reference {:refers #{}}}},
                                                                                                                                                                                :fhir/flags #{:MS},
                                                                                                                                                                                :zen/desc "Additional context for this event"}}}},
                                                                                                                                                :filter {:engine :match,
                                                                                                                                                         :match {:name "additional-context"}}}}},
                                                                                                   :every {:fhir/flags #{:MS}},
                                                                                                   :minItems 1}},
                                                                                     :require #{:part}}},
                                                                    :filter {:engine :match,
                                                                             :match {:name "notification-event"}}},
                                               "error" {:schema {:type zen/vector,
                                                                 :every {:type zen/map,
                                                                         :keys {:name {:const {:value "error"},
                                                                                       :zen/desc "Slice discriminator: errors on the subscription"},
                                                                                :value {:fhir/polymorphic true,
                                                                                        :type zen/map,
                                                                                        :fhir/flags #{:MS},
                                                                                        :zen/desc "An error on the subscription"}}}},
                                                        :filter {:engine :match,
                                                                 :match {:name "error"}}}}},
                            :every {:confirms #{hl7-fhir-uv-subscriptions-backport-r4b.backport-subscription-status-r4/parameter-schema}},
                            :minItems 3}},
         :zen.fhir/type "Parameters"}}
